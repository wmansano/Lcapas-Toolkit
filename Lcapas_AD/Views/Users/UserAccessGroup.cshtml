@model Lcapas.Core.Library.UserAccessViewObj

@{
    ViewBag.Title = "User Access Groups";
}

@section JavaScriptVariables {
    <script type="text/javascript">
        var SetUsersGroupsPath = '@Url.Action("SetUsersGroups", "Users")';
    </script>
}

@section JavaScript {
    <script src="@Url.Content("~/Scripts/lcapas-settings.js?<?=time()?>")" type="text/javascript"></script>
}

@section Styles {
    <link href="~/Content/Site.css" rel="stylesheet" type="text/css" />
}
@section Menu {
    @RenderPage("~/Views/Menu/_UsersMenu.cshtml")
}

@Html.AntiForgeryToken()
<h2>@ViewBag.Title</h2>

<div class="container">

    @using (Html.BeginForm("SetUsersGroups", "Users", FormMethod.Post, new { @id = "UserAccessForm" }))
    {
        <div class="list-group">
            <a href="#list-item" class="list-group-item arrow" data-toggle="collapse">Users</a>
            <ul id="list-item" class="list-group" item-type="user">
                @if (Model != null && Model.AccessGroups != null && Model.Users != null)
                {
                    <table id="userAccess">
                        <tr>
                            <th></th>
                            @foreach (var accessgroup in Model.AccessGroups.OrderBy(x => x.AccessGroupId))
                            {
                                <th class="tooltip-wrap">
                                    @accessgroup.AccessGroupDesc.ToString()

                                    <span class="tooltip-content tooltip">

                                        @foreach (var item in accessgroup.PermissionRecords.Where(x => x.AccessGroup_AccessGroupId == accessgroup.AccessGroupId && x.ActionType.ExternalAction == true).ToList())
                                        {
                                            <b>@item.PermissionRecordNote.ToString()</b><br />
                                        }
                                    </span>

                                </th>
                            }
                            <th></th>
                        </tr>

                        @foreach (var user in Model.Users.OrderBy(x => x.FullName))
                        {
                            <tr>
                                <td>
                                    @user.FullName - @user.sNumber
                                </td>
                                @foreach (var accessGroup in Model.AccessGroups.OrderBy(x => x.AccessGroupId))
                                {
                                    <td align="center">

                                        <div class="rdobtngrp access-group-@user.UserId">
                                            @Html.CheckBox(user.UserId.ToString(), user.AccessGroups.Select(y => y.AccessGroupId).Contains(accessGroup.AccessGroupId), new { @class = "access-group-check-"+accessGroup.AccessGroupId })
                                        </div>
                                    </td>
                                }
                                <td><input type="button" id="SettingAccessGroup" class="button user-access-submit" value="Save" onclick="javascript:SaveUserAccessGroup('@user.UserId', '@user.FirstName @user.LastName');" /></td>
                            </tr>
                        }
                    </table>
                }
            </ul>
        </div>

    }

</div>