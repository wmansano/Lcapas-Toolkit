@model Lcapas.Core.Library.ExceptionErrorsReportViewObj

@section JavaScriptVariables {
<script type="text/javascript">
    var PrintReportPath = '@Url.Action("PrintReports", "Reports")';
</script>
}

@section JavaScript {
    <script src="@Url.Content("~/Scripts/lcapas-settings.js?<?=time()?>")" type="text/javascript"></script>
}

@section Styles {
    <link href="~/Content/Site.css" rel="stylesheet" type="text/css" />
}
@section Menu {
    @RenderPage("~/Views/Menu/_ReportsMenu.cshtml")
}

@Html.AntiForgeryToken()

    <div class="container">
        <h2>@Model.PageTitle</h2>
        <div class="paging">
            @if (Model.ExceptionErrorsReportSearchFilter != null)
            {
                <div class="page-print">
                    <input id="prntErrorBtn" type="button" value="Print Reports" onclick="return false" class="btn btn-default button pull-right hor-pad" />
                </div>
                <div class="page-last">
                    @if (Model.Pagination.PageIndex < Model.Pagination.PageCount)
                    {
                        <input id="lastPage" type="image" title="Last Page" value="" src="~/Content/images/last.png" class="button" />
                    }
                </div>
                <div class="page-next">
                    @if (Model.Pagination.PageIndex < Model.Pagination.PageCount)
                    {
                        <input id="nextPage" type="image" title="Next Page" value="" src="~/Content/images/next.png" class="button" />
                    }
                </div>
                <div class="page-num">
                    @Html.LabelFor(m => m.Pagination.PageIndex, new { @class = "control-label" }) @Html.DisplayFor(m => m.Pagination.PageIndex, new { @class = "text ui-widget-content ui-corner-all" }) of @Html.DisplayFor(m => m.Pagination.PageCount, new { @class = "text ui-widget-content ui-corner-all" })
                </div>
                <div class="page-prev">
                    @if (Model.Pagination.PageIndex > 1)
                    {
                        <input id="prevPage" type="image" title="Previous Page" value="" src="~/Content/images/prev.png" class="button" />
                    }
                </div>
                <div class="page-first">
                    @if (Model.Pagination.PageIndex > 1)
                    {
                        <input id="firstPage" type="image" title="First Page" value="" src="~/Content/images/first.png" class="button" />
                    }
                </div>
                <div class="page-size">
                    @Html.LabelFor(m => m.Pagination.PageSizes, new { @class = "control-label" })
                    @Html.DropDownListFor(m => m.Pagination.PageSize, Model.Pagination.PageSizes, string.Empty, new { @id = "pSize", @class = "text ui-widget-content ui-corner-all" })
                </div>
                <div class="page-results">
                    @Html.LabelFor(m => m.Pagination.RecCount, new { @class = "control-label" })
                    @Html.DisplayFor(m => m.Pagination.RecCount, new { @class = "text ui-widget-content ui-corner-all" })
                </div>
            }
        </div>
        <br />
        <div id="table-container">
            @using (Html.BeginForm("ExceptionError", "Reports", FormMethod.Post, new { DefaultButton = "search-btn", id = "submitForm" }))
            {
                <table id="data-tbl" class="TFtable display">
                    <thead class="tableHeader">
                        <tr class="tableHeader">
                            <th></th>
                            <th class="col-xw-100">
                                @Html.LabelFor(m => m.ExceptionErrorsReportSearchFilter.Page, new { @class = "control-label col-xw-60" })
                            </th>
                            <th class="col-xw-60">
                                @Html.LabelFor(m => m.ExceptionErrorsReportSearchFilter.Project, new { @class = "control-label col-xw-60" })
                            </th>
                            <th class="col-xw-180">
                                @Html.LabelFor(m => m.ExceptionErrorsReportSearchFilter.Function, new { @class = "control-label col-xw-180" })
                            </th>
                            <th class="col-xw-300">
                                @Html.LabelFor(m => m.ExceptionErrorsReportSearchFilter.Value, new { @class = "control-label col-xw-300" })
                            </th>
                            <th class="col-xw-50">
                                @Html.LabelFor(m => m.ExceptionErrorsReportSearchFilter.CreatedBy, new { @class = "control-label col-xw-50" })
                            </th>
                            <th class="col-xw-200">
                                @Html.LabelFor(m => m.ExceptionErrorsReportSearchFilter.CreatedDateTime, new { @class = "control-label col-xw-200" })
                            </th>
                            <th colspan="2" />
                        </tr>
                        <tr class="tableHeader hide-scroll">
                            <th id="selectAll" title="Select All">
                                <input id="SelectAll" type="checkbox" class="text" checked>
                            </th>
                            <th title="Page" class="col-xw-80">
                                @Html.TextBoxFor(m => m.ExceptionErrorsReportSearchFilter.Page, new { @class = "text ui-widget-content ui-corner-all searchfield col-xw-80" })
                            </th>
                            <th title="Project" class="col-xw-60">
                                @Html.TextBoxFor(m => m.ExceptionErrorsReportSearchFilter.Project, new { @class = "text ui-widget-content ui-corner-all searchfield col-xw-50" })
                            </th>
                            <th title="Function" class="col-xw-180">
                                @Html.TextBoxFor(m => m.ExceptionErrorsReportSearchFilter.Function, new { @class = "text ui-widget-content ui-corner-all searchfield col-xw-180" })
                            </th>
                            <th title="Value" class="col-xw-300">
                                @Html.TextBoxFor(m => m.ExceptionErrorsReportSearchFilter.Value, new { @class = "text ui-widget-content ui-corner-all searchfield col-xw-300" })
                            </th>
                            <th title="Created By" class="col-xw-50">
                                @Html.TextBoxFor(m => m.ExceptionErrorsReportSearchFilter.CreatedBy, new { @class = "text ui-widget-content ui-corner-all searchfield col-xw-50" })
                            </th>
                            <th title="Created Date" class="col-xw-200">
                                @Html.TextBoxFor(m => m.ExceptionErrorsReportSearchFilter.CreatedDateTime, "{0:yyyy-MM-dd}", new { @class = "text ui-widget-content ui-corner-all datepicker date-mask searchfield col-md-7" })
                            </th>
                            <th title="Clear">
                                <input id="clear-btn" type="image" title="Clear" src="~/Content/images/eraser_small.png" class="submit-btn" onclick="location.href='@Url.Action("ApplicationReport", "Reports")';return false;" />
                            </th>
                            <th title="Search">
                                <input id="search-btn" type="image" title="Search" src="~/Content/images/search.png" class="submit-btn" />
                                @Html.HiddenFor(m => m.Pagination.PageIndex, new { id = "hf-pIndex" })
                                @Html.HiddenFor(m => m.Pagination.PageSize, new { id = "hf-pSize" })
                                @Html.HiddenFor(m => m.Pagination.PageCount, new { id = "hf-pCount" })
                                @Html.HiddenFor(m => m.Pagination.RecCount, new { id = "totalRes" })

                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.ExceptionErrorsReportSearchResultsFilter.Count > 0)
                        {
                            foreach (var item in Model.ExceptionErrorsReportSearchResultsFilter)
                            {
                                <tr class=" tableBody">
                                    <td>
                                        <input type="checkbox" name="@item.StatusTrackingID" checked>
                                    </td>
                                    <td class="col-xw-100">
                                        @item.Page
                                    </td>
                                    <td class="col-xw-60">
                                        @item.Project
                                    </td>
                                    <td class="col-xw-180">
                                        @item.Function
                                    </td>
                                    <td class="col-xw-300">
                                        @item.Value
                                    </td>
                                    <td class="col-xw-50">
                                        @item.CreatedBy
                                    </td>
                                    <td class="col-xw-200">
                                        @if (item.CreatedDateTime != null)
                                        {
                                            @item.CreatedDateTime @*.Value.ToString("yyyy/MM/dd")*@
                                        }
                                    </td>
                                    <td colspan="2" />
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="20" style="color:red;text-align:center;">
                                    <br />No records found.
                                    <br />Please enter search parameters and click 'Search'. <br />
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
        </div>
        <div id="bottom_anchor"></div>
        <br />
        </div>
