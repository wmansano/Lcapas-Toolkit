@model Lcapas.Core.Library.UnsolicitedBatchListViewObj

@section JavaScriptVariables {
    <script type="text/javascript">
        var SendUnsolicitedBatchTranscriptsPath = '@Url.Action("SendUnsolicitedBatchTranscripts", "Transcripts")';
        var ExportReportPath = '@Url.Action("ExportReports", "Reports")';
        var PrintReportPath = '@Url.Action("PrintReports", "Reports")';
    </script>
}
@section JavaScript {
    <script src="@Url.Content("~/Scripts/lcapas-transcripts.js?<?=time()?>")" type="text/javascript"></script>
}
@section Menu {
    @RenderPage("~/Views/Menu/_TranscriptsMenu.cshtml")
}

@Html.AntiForgeryToken()
<div class="container">
    <h2>@ViewBag.Title</h2>
    <div class="paging">
        @if (Model.Students != null)
        {
            <div class="page-print">
                <input id="excelUnsolicitedBatchTransReportBtn" type="button" value="Export to Excel" class="button" />
            </div>
            <div class="page-print">
                <input id="prntUnsolicitedBatchTransReportBtn" type="button" value="Print Reports" class="btn btn-default button pull-right hor-pad" />
            </div>
            <div class="page-last">
                @if (Model.Pagination.PageIndex < Model.Pagination.PageCount)
                {
                    <input id="lastPage" type="image" title="Last Page" value="" src="~/Content/images/last.png" class="button" />
                }
            </div>
            <div class="page-next">
                @if (Model.Pagination.PageIndex < Model.Pagination.PageCount)
                {
                    <input id="nextPage" type="image" title="Next Page" value="" src="~/Content/images/next.png" class="button" />
                }
            </div>
            <div class="page-num">
                @Html.LabelFor(m => m.Pagination.PageIndex, new { @class = "control-label" }) @Html.DisplayFor(m => m.Pagination.PageIndex, new { @class = "text ui-widget-content ui-corner-all" }) of @Html.DisplayFor(m => m.Pagination.PageCount, new { @class = "text ui-widget-content ui-corner-all" })
            </div>
            <div class="page-prev">
                @if (Model.Pagination.PageIndex > 1)
                {
                    <input id="prevPage" type="image" title="Previous Page" value="" src="~/Content/images/prev.png" class="button" />
                }
            </div>
            <div class="page-first">
                @if (Model.Pagination.PageIndex > 1)
                {
                    <input id="firstPage" type="image" title="First Page" value="" src="~/Content/images/first.png" class="button" />
                }
            </div>
            <div class="page-size">
                @Html.LabelFor(m => m.Pagination.PageSizes, new { @class = "control-label" })
                @Html.DropDownListFor(m => m.Pagination.PageSize, Model.Pagination.PageSizes, string.Empty, new { @id = "pSize", @class = "text ui-widget-content ui-corner-all" })
            </div>
            <div class="page-results">
                @Html.LabelFor(m => m.Pagination.RecCount, new { @class = "control-label" })
                @Html.DisplayFor(m => m.Pagination.RecCount, new { @class = "text ui-widget-content ui-corner-all" })
            </div>
        }
    </div>
    <br />
    <div id="table-container">
        <table id="data-tbl" class="display">
            <thead class="columnScrolling ">
                @using (Html.BeginForm("UnsolicitedBatchTranscript", "Transcripts", FormMethod.Post, new { DefaultButton = "search-btn", id = "submitForm" }))
                {
                    <tr class="tableHeader">
                        <th></th>
                        <th>
                            @Html.LabelFor(m => m.SearchFilter.StudentRecord.FullName, new { @class = "control-label" })
                        </th>
                        <th>
                            @Html.LabelFor(m => m.SearchFilter.StudentRecord.Snumber, new { @class = "control-label" })
                        </th>
                        <th>
                            @Html.LabelFor(m => m.SearchFilter.StudentRecord.ASN, new { @class = "control-label" })
                        </th>
                        <th>
                            @Html.LabelFor(m => m.SearchFilter.ProgramCode, new { @class = "control-label" })
                        </th>
                        <th>
                            @Html.LabelFor(m => m.SearchFilter.DeptCode, new { @class = "control-label" })
                        </th>
                        <th>
                            @Html.LabelFor(m => m.SearchFilter.Term, new { @class = "control-label" })
                        </th>
                        <th title="Clear"></th>
                    </tr>
                    <tr class="tableHeader hide-scroll">
                        <th id="selectAll" title="Select All" class="text-right col-xw-20">
                            <input type="checkbox" id="SelectAll" class="text" checked>
                        </th>
                        <th title="Student Name" class="col-xw-150">
                            @Html.TextBoxFor(m => m.SearchFilter.StudentRecord.FullName, new { @id = "FullName", @class = "text ui-widget-content ui-corner-all searchfield" })
                        </th>
                        <th title="sNumber" class="col-xw-60">
                            @Html.TextBoxFor(m => m.SearchFilter.StudentRecord.Snumber, new { @id = "Snumber", @class = "text ui-widget-content ui-corner-all searchfield col-xw-60" })
                        </th>
                        <th title="ASN" class="col-xw-60">
                            @Html.TextBoxFor(m => m.SearchFilter.StudentRecord.ASN, new { @id = "ASN", @class = "text ui-widget-content ui-corner-all searchfield col-xw-60" })
                        </th>
                        <th title="Program" class="col-xw-290">
                            @Html.DropDownListFor(m => m.SearchFilter.ProgramCode, Model.Programs, "", new { @id = "ProgramCode", @class = "text ui-widget-content ui-corner-all searchfield" })
                        </th>
                        <th title="Program" class="col-xw-290">
                            @Html.DropDownListFor(m => m.SearchFilter.DeptCode, Model.Departments, "", new { @id = "DeptCode", @class = "text ui-widget-content ui-corner-all searchfield" })
                        </th>
                        <th title="Term" class="col-xw-100">
                            @Html.DropDownListFor(m => m.SearchFilter.Term, Model.Terms, "", new { @id = "Term", @class = "text ui-widget-content ui-corner-all searchfield" })
                        </th>
                        <th title="Clear" class="col-xw-80">
                            <input id="clear-btn" type="image" title="Clear" src="~/Content/images/eraser_small.png" class="submit-btn" onclick="location.href='@Url.Action("UnsolicitedBatchTranscript", "Transcripts")';return false;" />
                            <input id="search-btn" type="image" title="Search" src="~/Content/images/search.png" class="submit-btn" />
                            @Html.HiddenFor(m => m.Pagination.PageIndex, new { id = "hf-pIndex" })
                            @Html.HiddenFor(m => m.Pagination.PageSize, new { id = "hf-pSize" })
                            @Html.HiddenFor(m => m.Pagination.PageCount, new { id = "hf-pCount" })
                            @Html.HiddenFor(m => m.Pagination.RecCount, new { id = "totalRes" })
                        </th>
                    </tr>
                }
            </thead>
            <tbody class="tableBody">
                @if (Model.Students.Any())
                {
                    foreach (var Student in Model.Students)
                    {
                        <tr id="responseLine-@Student.sNumber" class="pad-left-tr-25" onmouseover="style.backgroundColor='lightblue';style.cursor='default';" onmouseout="style.backgroundColor='white'" );">
                            <td class="text-right col-xw-20">
                                <input type="checkbox" name="@Student.sNumber" checked />
                            </td>
                            <td>
                                @Student.FullName
                            </td>
                            <td>
                                @Student.sNumber
                            </td>
                            <td>
                                @Student.Asn
                            </td>
                            <td>
                                @(Student.ProgramCode+" - "+Student.ProgramTitle)
                            </td>
                            <td>
                                @(Student.DeptCode+" - "+Student.DeptTitle)
                            </td>
                            <td>
                                @Student.Term
                            </td>
                            <td />
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="10" style="color:red;text-align:center;">
                            <br />No records found.
                            <br />Please enter search parameters and click 'Search'. <br />
                        </td>
                    </tr>
                }

            </tbody>
        </table>
    </div>
    <div id="bottom_anchor"></div>
    <br />
    <div class="pull-right batch-button">
        <input id="sendUnsolicitedBatchTransBtn" type="button" value="Send Unsocilited Transcripts" onclick="return false" class="btn btn-default button pull-right hor-pad" />
        
        @Html.LabelFor(m => m.SearchFilter.DestinationInstitution, new { @class = "control-label" }):
        @Html.DropDownListFor(m => m.SearchFilter.DestinationInstitution, Model.DestinationInstitutions, "", new { @class = "text ui-widget-content ui-corner-all col-xw-290" })
    </div>

</div>
