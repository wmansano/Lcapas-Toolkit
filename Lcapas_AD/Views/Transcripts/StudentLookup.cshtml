@model Lcapas.Core.Library.StuLookupListViewObj
@{
    ViewBag.Title = "Student Lookup";
}
@section JavaScript {
    <script src="@Url.Content("~/Scripts/lcapas-transcripts.js?<?=time()?>")" type="text/javascript"></script>
}
@section Menu {
    @RenderPage("~/Views/Menu/_TranscriptsMenu.cshtml")
}

@Html.AntiForgeryToken()
<div class="container">
    <h2>@ViewBag.Title</h2>
    @using (Html.BeginForm("StudentLookup", "Transcripts", FormMethod.Post, new { DefaultButton = "search-btn", id = "submitForm" }))
    {       
        if (Model.StudentRecords.Any())
        {
            <div class="paging">
                <div class="page-next">
                    @if (Model.Pagination.PageIndex < Model.Pagination.PageCount)
                    {
                        <input id="nextPage" type="image" title="Next Page" value="" src="~/Content/images/next.png" class="button" />
                    }
                </div>
                <div class="page-num">
                    @Html.LabelFor(m => m.Pagination.PageIndex, new { @class = "control-label" }) @Html.DisplayFor(m => m.Pagination.PageIndex, new { @class = "text ui-widget-content ui-corner-all" }) of @Html.DisplayFor(m => m.Pagination.PageCount, new { @class = "text ui-widget-content ui-corner-all" })
                </div>
                <div class="page-prev">
                    @if (Model.Pagination.PageIndex > 1)
                    {
                        <input id="prevPage" type="image" title="Previous Page" value="" src="~/Content/images/prev.png" class="button" />
                    }
                </div>
                <div class="page-size">
                    @Html.LabelFor(m => m.Pagination.PageSizes, new { @class = "control-label" })
                    @Html.DropDownListFor(m => m.Pagination.PageSize, Model.Pagination.PageSizes, string.Empty, new { @id = "pSize", @class = "text ui-widget-content ui-corner-all" })
                </div>
                <div class="page-results">
                    @Html.LabelFor(m => m.Pagination.RecCount, new { @class = "control-label" })
                    @Html.DisplayFor(m => m.Pagination.RecCount, new { @class = "text ui-widget-content ui-corner-all" })
                </div>
            </div>
        }
        @Html.HiddenFor(m => m.Pagination.PageIndex, new { id = "hf-pIndex" })
        @Html.HiddenFor(m => m.Pagination.PageSize, new { id = "hf-pSize" })
        <br />
        <table id="results-tbl" class="display">
            <thead>
                <tr class="tableHeader">
                    <th title="sNumber" class="col-fw-100">
                        @Html.LabelFor(m => m.SearchFilter.StudentRecord.Snumber, new { @class = "control-label" })
                    </th>
                    <th title="ASN" class="col-fw-100">
                        @Html.LabelFor(m => m.SearchFilter.StudentRecord.ASN, new { @class = "control-label" })
                    </th>
                    <th title="Last Name" class="col-fw-100">
                        @Html.LabelFor(m => m.SearchFilter.StudentRecord.LastName, new { @class = "control-label" })
                    </th>
                    <th title="First Name" class="col-fw-100">
                        @Html.LabelFor(m => m.SearchFilter.StudentRecord.FirstName, new { @class = "control-label" })
                    </th>
                    <th title="Middle Name" class="col-fw-100">
                        @Html.LabelFor(m => m.SearchFilter.StudentRecord.MiddleName, new { @class = "control-label" })
                    </th>
                    <th title="Gender" class="col-fw-100">
                        @Html.LabelFor(m => m.SearchFilter.StudentRecord.GenderCode, new { @class = "control-label" })
                    </th>
                    <th title="BirthDate" class="col-fw-100">
                        @Html.LabelFor(m => m.SearchFilter.StudentRecord.BirthDate, new { @class = "control-label" })
                    </th>
                    <th title="Clear">

                    </th>
                    <th title="Search">

                    </th>
                </tr>
                <tr class="tableHeader" style.backgroundColor='#eee' ;">
                    <th title="sNumber" class="col-fw-100">
                        @Html.TextBoxFor(m => m.SearchFilter.StudentRecord.Snumber, new { @class = "text ui-widget-content ui-corner-all searchfield no-search selSnum" })
                    </th>
                    <th title="ASN" class="col-fw-100">
                        @Html.TextBoxFor(m => m.SearchFilter.StudentRecord.ASN, new { @class = "text ui-widget-content ui-corner-all searchfield no-search" })
                    </th>
                    <th title="Last Name" class="col-fw-100">
                        @Html.TextBoxFor(m => m.SearchFilter.StudentRecord.LastName, new { @class = "text ui-widget-content ui-corner-all searchfield no-search" })
                    </th>
                    <th title="First Name" class="col-fw-100">
                        @Html.TextBoxFor(m => m.SearchFilter.StudentRecord.FirstName, new { @class = "text ui-widget-content ui-corner-all searchfield no-search" })
                    </th>
                    <th title="Middle Name" class="col-fw-100">
                        @Html.TextBoxFor(m => m.SearchFilter.StudentRecord.MiddleName, new { @class = "text ui-widget-content ui-corner-all searchfield no-search" })
                    </th>
                    <th title="Gender" class="col-fw-100">
                        @Html.EnumDropDownListFor(m => m.SearchFilter.StudentRecord.GenderCode, new { @class = "text ui-widget-content ui-corner-all searchfield no-search" })
                    </th>
                    <th class="date-container col-fw-100" title="Birth Date">
                        @Html.TextBoxFor(m => m.SearchFilter.StudentRecord.BirthDate, "{0:yyyy/MM/dd}", new { @class = "text ui-widget-content ui-corner-all datepicker date-mask searchfield no-search" })
                    </th>
                    <th>
                        @*<a href="@Url.Action("StudentLookup", "Transcripts")';return false;" title="Clear Filters"><input type="image" src="~/Content/images/eraser_small.png" class="submit-btn no-margin" /></a>
                    <input id="clear-btn" type="image" title="Clear" src="~/Content/images/eraser_small.png" class="submit-btn" onclick="location.reload();return false;" />*@
                        <input id="clear-btn" type="image" title="Clear" value="Clear" src="~/Content/images/eraser_small.png" class="submit-btn" formnovalidate />
                    </th>
                    <th>
                        <input id="search-btn" type="image" title="Search" src="~/Content/images/search.png" class="submit-btn" />
                    </th>
                </tr>
            </thead>
            @Html.HiddenFor(m => m.SearchFilter.DestAction)
            @Html.HiddenFor(m => m.SearchFilter.FromUrlAction)
            @Html.HiddenFor(m => m.SearchFilter.SelectedTransID)
            @Html.HiddenFor(m => m.Redirect, new { @id = "createResponse" })
            @Html.HiddenFor(m => m.SearchFilter.StudentRecord.Snumber, new { @class = "selSnum" })
            @Html.HiddenFor(m => m.SearchFilter.ClearFilter, new { @id = "clearFilter" })
            @Html.HiddenFor(m => m.SearchFilter.TransactionTranscriptUuid)
            <tbody class="tableBody">
                @if (Model.StudentRecords == null || Model.StudentRecords.Count() == 0)
                {
                    <tr>
                        <td colspan="12" style="color:red;text-align:center;">
                            <br />No records found.
                            <br />Please enter search parameters and click 'Search'. <br />

                            @if (Model.SearchFilter.DestAction == Lcapas.Core.Library.Structs.DestActions.CreateResponse)
                            {
                                <div id="dialog-create-response" redirect="@Model.SearchFilter.FromUrlAction"></div>
                            }
                        </td>
                    </tr>
                }
                else
                {
                    foreach (var student in Model.StudentRecords)
                    {
                        <tr id="student-select" class="select-row-item" onmouseover="style.backgroundColor='lightblue';style.cursor='pointer';" onmouseout="style.backgroundColor='white';">
                            <td class="col-fw-100 keycell">
                                @student.Snumber
                            </td>
                            <td class="col-fw-100">
                                @student.ASN
                            </td>
                            <td class="col-fw-100">
                                @student.LastName
                            </td>
                            <td class="col-fw-100">
                                @student.FirstName
                            </td>
                            <td class="col-fw-100">
                                @student.MiddleName
                            </td>
                            <td class="col-fw-100">
                                @student.Gender
                            </td>
                            <td class="col-fw-100">
                                @if (student.BirthDate.HasValue)
                                {
                                    @student.BirthDate.Value.ToString("yyyy/MM/dd")
                                }
                            </td>
                            <td>
                                <input type="text" value="Select" class="submit-btn no-margin" />
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    }
</div>