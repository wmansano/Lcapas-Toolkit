@model Lcapas.Core.Library.SystemSettingsViewObj

@{
    ViewBag.Title = "Server Status";
}
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section JavaScript {
    <script src="@Url.Content("~/Scripts/bootstrap-toggle.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/lcapas-generic.js?<?=time()?>")" type="text/javascript"></script>
}
@section Styles {
    <link href="~/Content/Bootstrap/bootstrap-toggle.min.css" rel="stylesheet" type="text/css" />
    <link href="~/Content/Settings.css" rel="stylesheet" type="text/css" />
}
@section Menu {
    @RenderPage("~/Views/Menu/_SettingsMenu.cshtml")
}

@using (Html.BeginForm("SystemSettings", "Settings", FormMethod.Post, new { id = "submitForm" }))
{
    @Html.AntiForgeryToken()
    <h2>@ViewBag.Title - Connected Environment: <label class="env-lbl">(@ViewBag.Environment.ToString().ToUpper())</label></h2>

    <div class="form-horizontal">
        <div id="form-container" class="form-group row">
            <div class="col-md-12">
                <div class="list-group">
                    <a href="#list-database-connection" class="list-group-item arrow" data-toggle="collapse">Database Connections</a>
                    <ul id="list-database-connection" class="list-group collapse in">
                        <li id="apas-database" class="list-group-item ui-state-default">
                            <div class="pull-right" style="margin-right: -10px; margin-top: -3px;">
                                @Html.CheckBoxFor(m => m.IsApasDatabaseConnected, new { disabled = "disabled", data_toggle = "toggle", data_size = "mini", data_onstyle = "primary", data_offstyle = "danger" })
                            </div>
                            <span class="item-content" title="@Html.DisplayNameFor(m => m.IsApasDatabaseConnected)">@Html.DisplayNameFor(m => m.IsApasDatabaseConnected)</span>
                        </li>
                        <li id="apas-database" class="list-group-item ui-state-default">
                            <div class="pull-right" style="margin-right: -10px; margin-top: -3px;">
                                @Html.CheckBoxFor(m => m.IsColleagueDatabaseConnected, new { disabled = "disabled", data_toggle = "toggle", data_size = "mini", data_onstyle = "primary", data_offstyle = "danger" })
                            </div>
                            <span class="item-content" title="@Html.DisplayNameFor(m => m.IsColleagueDatabaseConnected)">@Html.DisplayNameFor(m => m.IsColleagueDatabaseConnected)</span>
                        </li>
                    </ul>
                    <a href="#list-server-status" class="list-group-item arrow" data-toggle="collapse">Server Status</a>
                    <ul id="list-server-status" class="list-group collapse in">
                        @for (int i = 0; i < Model.ServerList.Count(); i++)
                        {
                            <li id="server-status" class="list-group-item ui-state-default">
                                <div class="pull-right" style="margin-right: -10px; margin-top: -3px;">
                                    @Html.CheckBox(Model.ServerList[i].URL, Model.ServerList[i].Status == "Success", new { disabled = "disabled", data_toggle = "toggle", data_size = "mini", data_onstyle = "primary", data_offstyle = "danger" })
                                </div>
                                <span class="item-content" title="@Model.ServerList[i].URL - @Model.ServerList[i].IPAddress - @Model.ServerList[i].RoundTrip">@Model.ServerList[i].URL</span>
                            </li>

                        }
                    </ul>
                    <a href="#list-service-status" class="list-group-item arrow" data-toggle="collapse">Service Status</a>
                    <ul id="list-service-status" class="list-group collapse in">
                        @foreach (var server in Model.ServerList)
                        {
                            if (server.ServiceList != null && server.ServiceList.Any())
                            {
                                foreach (var service in server.ServiceList)
                                {
                                    <li id="service-status" class="list-group-item ui-state-default">
                                        <div class="pull-right" style="margin-right: -10px; margin-top: -3px;">
                                            @Html.CheckBox(service.Key, service.Value, new { disabled = "disabled", data_toggle = "toggle", data_size = "mini", data_onstyle = "primary", data_offstyle = "danger" })
                                        </div>
                                        <span class="item-content" title="@server.URL - @service.Key">@server.URL - @service.Key</span>
                                    </li>
                                }
                            }
                        }
                    </ul>
                    <a href="#list-webservice-status" class="list-group-item arrow" data-toggle="collapse">WebService Status</a>
                    <ul id="list-webservice-status" class="list-group collapse in">
                        @if (Model.WebServiceList != null && Model.WebServiceList.Any())
                        {
                            foreach (var server in Model.WebServiceList)
                            {
                                <li id="webservice-status" class="list-group-item ui-state-default">
                                    <div class="pull-right" style="margin-right: -10px; margin-top: -3px;">
                                        @Html.CheckBox(server.Key, server.Value, new { disabled = "disabled", data_toggle = "toggle", data_size = "mini", data_onstyle = "primary", data_offstyle = "danger" })
                                    </div>
                                    <span class="item-content" title="@server.Key">@(server.Key.Length > 10 ? server.Key.Substring(0, 50)+"..." : server.Key)</span>
                                </li>
                            }
                        }
                    </ul>
                </div>
            </div>
        </div>
    </div>
}
